CREATE TABLE MUSEUM (
    Address VARCHAR(255) PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
);


CREATE TABLE SUPERVISOR (
    SEmail VARCHAR(255),
    MuseumAddress VARCHAR(255),
    PRIMARY KEY(SEmail),
    FOREIGN KEY(SEmail) REFERENCES USER(Email) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(MuseumAddress) REFERENCES MUSEUM(Address)
);


CREATE TABLE EVENT (
    EvID INT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Start_Date VARCHAR(255) NOT NULL,
    End_Date VARCHAR(255) NOT NULL,
    Address VARCHAR(255),
);


CREATE TABLE ARTIST (
    AID INT PRIMARY KEY,
    Date_of_Birth VARCHAR(255),
    First_Name VARCHAR(255) NOT NULL,
    Middle_Name VARCHAR(255),
    Last_Name VARCHAR(255) NOT NULL
);


CREATE TABLE ARTIST_WORKS (
    AID INT,
    Works VARCHAR(255),
    PRIMARY KEY(AID, Works),
    FOREIGN KEY(AID) REFERENCES ARTIST(AID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE EXHIBIT (
    ExID INT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Address VARCHAR(255),
);


CREATE TABLE ARTIFACT (
    ArtID INT PRIMARY KEY,
    Description VARCHAR(255),
    Year_Made VARCHAR(255),
    Display_Status VARCHAR(255),
    Name VARCHAR(255) NOT NULL,
    SEmail VARCHAR(255) NOT NULL,
    ExID INT NOT NULL,
    FOREIGN KEY(SEmail) REFERENCES SUPERVISOR(SEmail) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(ExID) REFERENCES EXHIBIT(ExID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE ARTIFACT_CREATORS (
    ArtID INT,
    Creators VARCHAR(255),
    PRIMARY KEY(ArtID, Creators),
    FOREIGN KEY(ArtID) REFERENCES ARTIFACT(ArtID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE ARTIFACT_RATINGS (
    ArtID INT,
    Ratings INT,
    PRIMARY KEY(ArtID, Ratings),
    FOREIGN KEY(ArtID) REFERENCES ARTIFACT(ArtID)
);


CREATE TABLE CREATES (
    ArtID INT,
    AID INT,
    PRIMARY KEY(ArtID, AID),
    FOREIGN KEY(ArtID) REFERENCES ARTIFACT(ArtID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(AID) REFERENCES ARTIST(AID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE USER (
    Email VARCHAR(255) PRIMARY KEY,
    First_Name VARCHAR(255) NOT NULL,
    Middle_Name VARCHAR(255),
    Last_Name VARCHAR(255) NOT NULL,
    Username VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Year_of_Birth INT
);


CREATE TABLE EMPLOYEE (
    EEmail VARCHAR(255),
    SEmail VARCHAR(255),
    MuseumAddress VARCHAR(255),
    PRIMARY KEY(EEmail),
    FOREIGN KEY(EEmail) REFERENCES USER(Email) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(SEmail) REFERENCES SUPERVISOR(SEmail) ON DELETE CASCADE ON UPDATE CASCADE
    FOREIGN KEY(MuseumAddress) REFERENCES MUSEUM(Address)
);


CREATE TABLE VISITOR (
    VEmail VARCHAR(255),
    PRIMARY KEY(VEmail),
    FOREIGN KEY(VEmail) REFERENCES USER(Email) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE EDITS (
    EEmail VARCHAR(255),
    ArtID INT,
    PRIMARY KEY(EEmail, ArtID),
    FOREIGN KEY(EEmail) REFERENCES EMPLOYEE(EEmail) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(ArtID) REFERENCES ARTIFACT(ArtID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE REVIEW_EVENT (
    VEmail VARCHAR(255),
    EvID INT,
    Review_Desc VARCHAR(255),
    PRIMARY KEY(VEmail, EvID),
    FOREIGN KEY(VEmail) REFERENCES VISITOR(VEmail) ON UPDATE CASCADE,
    FOREIGN KEY(EvID) REFERENCES EVENT(EvID) ON UPDATE CASCADE
);


CREATE TABLE REVIEW_ARTIFACT (
    VEmail VARCHAR(255),
    ArtID INT,
    Review_Desc VARCHAR(255),
    PRIMARY KEY(VEmail, ArtID),
    FOREIGN KEY(VEmail) REFERENCES VISITOR(VEmail) ON UPDATE CASCADE,
    FOREIGN KEY(ArtID) REFERENCES ARTIFACT(ArtID) ON UPDATE CASCADE
);  


CREATE TABLE PART_OF (
    EvID INT,
    ExID INT,
    PRIMARY KEY(EvID, ExID),
    FOREIGN KEY(EvID) REFERENCES EVENT(EvID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(ExID) REFERENCES EXHIBIT(ExID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE VISITS (
    VEmail VARCHAR(255),
    Address VARCHAR(255),
    PRIMARY KEY(VEmail, Address),
    FOREIGN KEY(VEmail) REFERENCES VISITOR(VEmail) ON UPDATE CASCADE,
    FOREIGN KEY(Address) REFERENCES MUSEUM(Address) ON UPDATE CASCADE
);
